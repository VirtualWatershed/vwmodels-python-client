# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ModelResource(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ModelResource - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'created_at': 'datetime',
            'modelrun_id': 'int',
            'resource_size': 'int',
            'resource_type': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'created_at': 'created_at',
            'modelrun_id': 'modelrun_id',
            'resource_size': 'resource_size',
            'resource_type': 'resource_type'
        }

        self._id = None
        self._created_at = None
        self._modelrun_id = None
        self._resource_size = None
        self._resource_type = None

    @property
    def id(self):
        """
        Gets the id of this ModelResource.


        :return: The id of this ModelResource.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ModelResource.


        :param id: The id of this ModelResource.
        :type: int
        """
        self._id = id

    @property
    def created_at(self):
        """
        Gets the created_at of this ModelResource.


        :return: The created_at of this ModelResource.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this ModelResource.


        :param created_at: The created_at of this ModelResource.
        :type: datetime
        """
        self._created_at = created_at

    @property
    def modelrun_id(self):
        """
        Gets the modelrun_id of this ModelResource.


        :return: The modelrun_id of this ModelResource.
        :rtype: int
        """
        return self._modelrun_id

    @modelrun_id.setter
    def modelrun_id(self, modelrun_id):
        """
        Sets the modelrun_id of this ModelResource.


        :param modelrun_id: The modelrun_id of this ModelResource.
        :type: int
        """
        self._modelrun_id = modelrun_id

    @property
    def resource_size(self):
        """
        Gets the resource_size of this ModelResource.


        :return: The resource_size of this ModelResource.
        :rtype: int
        """
        return self._resource_size

    @resource_size.setter
    def resource_size(self, resource_size):
        """
        Sets the resource_size of this ModelResource.


        :param resource_size: The resource_size of this ModelResource.
        :type: int
        """
        self._resource_size = resource_size

    @property
    def resource_type(self):
        """
        Gets the resource_type of this ModelResource.


        :return: The resource_type of this ModelResource.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """
        Sets the resource_type of this ModelResource.


        :param resource_type: The resource_type of this ModelResource.
        :type: str
        """
        self._resource_type = resource_type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

